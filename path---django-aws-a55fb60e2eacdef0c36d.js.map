{"version":3,"sources":["webpack:///path---django-aws-a55fb60e2eacdef0c36d.js","webpack:///./.cache/json/django-aws.json"],"names":["webpackJsonp","380","module","exports","data","markdownRemark","html","frontmatter","title","date","path","tags","excerpt","pathContext"],"mappings":"AAAAA,cAAc,iBAERC,IACA,SAAUC,EAAQC,GCHxBD,EAAAC,SAAkBC,MAAQC,gBAAkBC,KAAA,6kOAAsmOC,aAA4OC,MAAA,2BAAAC,KAAA,aAAAC,KAAA,cAAAC,MAAA,gBAAAC,QAAA,2BAAwIC","file":"path---django-aws-a55fb60e2eacdef0c36d.js","sourcesContent":["webpackJsonp([204596129026606],{\n\n/***/ 380:\n/***/ (function(module, exports) {\n\n\tmodule.exports = {\"data\":{\"markdownRemark\":{\"html\":\"<p>참고 : Ask Django</p>\\n<h2>0. 404 페이지 만들기</h2>\\n<p>Page not found 404 에러를 띄워줄 html 페이지를 만듭니다. 잘못된 url로 접근했을 때, 노란색 장고 에러메시지보다는 404 페이지를 띄우는게 좋습니다. 어떤 404 페이지는 간단한 html 게임을 넣기도 합니다.</p>\\n<ol>\\n<li>html 파일이 있는 template 디렉토리에 <code>404.html</code> 파일을 만듭니다.</li>\\n<li>템플릿을 상속받습니다.</li>\\n<li>포스트나 댓글 인스턴스를 불러올 때 <code>django shortcuts</code> 의 <code>get_object_or_404</code>를 이용합니다.</li>\\n</ol>\\n<div class=\\\"gatsby-highlight\\\">\\n      <pre class=\\\"language-python\\\"><code class=\\\"language-python\\\"><span class=\\\"token keyword\\\">from</span> django<span class=\\\"token punctuation\\\">.</span>shortcuts <span class=\\\"token keyword\\\">import</span> redirect<span class=\\\"token punctuation\\\">,</span> render<span class=\\\"token punctuation\\\">,</span> get_object_or_404\\n\\n<span class=\\\"token keyword\\\">def</span> <span class=\\\"token function\\\">post_detail</span><span class=\\\"token punctuation\\\">(</span>request<span class=\\\"token punctuation\\\">,</span> post_pk<span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">:</span>\\n    post <span class=\\\"token operator\\\">=</span> get_object_or_404<span class=\\\"token punctuation\\\">(</span>Post<span class=\\\"token punctuation\\\">,</span> pk<span class=\\\"token operator\\\">=</span>post_pk<span class=\\\"token punctuation\\\">)</span>\\n</code></pre>\\n      </div>\\n<hr>\\n<h2>1. settings.py 분기하기</h2>\\n<p><code>settings.py</code>의 내용을 개발 버전 설정과 배포 버전 설정으로 나눠줍니다.</p>\\n<ol>\\n<li>프로젝트 디렉토리 안에 <code>settings</code> 라는 디렉토리를 만듭니다.</li>\\n<li>1번이 python 모듈이 되도록 <code>__init__.py</code>를 만들어줍니다.</li>\\n<li>2번 디렉토리 안에 <code>common.py</code>와 이를 import 하는 <code>dev.py</code>, <code>prod.py</code> 로 나눠줍니다.</li>\\n<li>\\n<p>원래 있던 <code>settings.py</code>의 내용을 <code>common.py</code>로 복사하고 디렉토리 경로를 한 depth 깊게 설정합니다.</p>\\n<div class=\\\"gatsby-highlight\\\">\\n      <pre class=\\\"language-python\\\"><code class=\\\"language-python\\\">BASE_DIR <span class=\\\"token operator\\\">=</span> dirname<span class=\\\"token punctuation\\\">(</span>dirname<span class=\\\"token punctuation\\\">(</span>dirname<span class=\\\"token punctuation\\\">(</span>os<span class=\\\"token punctuation\\\">.</span>path<span class=\\\"token punctuation\\\">.</span>abspath<span class=\\\"token punctuation\\\">(</span>__file__<span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">)</span>\\n</code></pre>\\n      </div>\\n</li>\\n<li>dev.py는 common.py를 전부 임포트 합니다.</li>\\n<li>prod.py를 아래와 같이 설정합니다.</li>\\n</ol>\\n<div class=\\\"gatsby-highlight\\\">\\n      <pre class=\\\"language-python\\\"><code class=\\\"language-python\\\"><span class=\\\"token keyword\\\">import</span> os\\n<span class=\\\"token keyword\\\">from</span> <span class=\\\"token punctuation\\\">.</span>common <span class=\\\"token keyword\\\">import</span> <span class=\\\"token operator\\\">*</span>\\n\\nDEBUG <span class=\\\"token operator\\\">=</span> <span class=\\\"token boolean\\\">False</span>\\nALLOWED_HOSTS <span class=\\\"token operator\\\">=</span> <span class=\\\"token punctuation\\\">[</span><span class=\\\"token string\\\">'\\\\*'</span><span class=\\\"token punctuation\\\">]</span>\\n\\nSTATIC_ROOT <span class=\\\"token operator\\\">=</span> os<span class=\\\"token punctuation\\\">.</span>path<span class=\\\"token punctuation\\\">.</span>join<span class=\\\"token punctuation\\\">(</span>BASE_DIR<span class=\\\"token punctuation\\\">,</span> <span class=\\\"token string\\\">\\\"..\\\"</span><span class=\\\"token punctuation\\\">,</span> <span class=\\\"token string\\\">\\\"staticfiles\\\"</span><span class=\\\"token punctuation\\\">)</span>\\nMEDIA_ROOT <span class=\\\"token operator\\\">=</span> os<span class=\\\"token punctuation\\\">.</span>path<span class=\\\"token punctuation\\\">.</span>join<span class=\\\"token punctuation\\\">(</span>BASE_DIR<span class=\\\"token punctuation\\\">,</span> <span class=\\\"token string\\\">\\\"..\\\"</span><span class=\\\"token punctuation\\\">,</span> <span class=\\\"token string\\\">\\\"media\\\"</span><span class=\\\"token punctuation\\\">)</span>\\n\\nDATABASES <span class=\\\"token operator\\\">=</span> <span class=\\\"token punctuation\\\">{</span> <span class=\\\"token string\\\">'default'</span><span class=\\\"token punctuation\\\">:</span> <span class=\\\"token punctuation\\\">{</span>\\n  <span class=\\\"token string\\\">'ENGINE'</span><span class=\\\"token punctuation\\\">:</span> <span class=\\\"token string\\\">'django.db.backends.postgresql'</span><span class=\\\"token punctuation\\\">,</span> <span class=\\\"token string\\\">'NAME'</span><span class=\\\"token punctuation\\\">:</span> <span class=\\\"token string\\\">'ubuntu'</span><span class=\\\"token punctuation\\\">,</span>\\n  <span class=\\\"token string\\\">'USER'</span><span class=\\\"token punctuation\\\">:</span> <span class=\\\"token string\\\">'ubuntu'</span><span class=\\\"token punctuation\\\">,</span>\\n  <span class=\\\"token string\\\">'PASSWORD'</span><span class=\\\"token punctuation\\\">:</span> <span class=\\\"token string\\\">'password'</span><span class=\\\"token punctuation\\\">,</span>\\n  <span class=\\\"token string\\\">'HOST'</span><span class=\\\"token punctuation\\\">:</span> <span class=\\\"token string\\\">'127.0.0.1'</span><span class=\\\"token punctuation\\\">,</span> <span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">,</span>\\n<span class=\\\"token punctuation\\\">}</span>\\n</code></pre>\\n      </div>\\n<ol start=\\\"7\\\">\\n<li>각종 계정 정보는 환경변수를 통해 접근하도록 하는 것이 안전합니다.</li>\\n</ol>\\n<hr>\\n<h2>2. 3rd party 패키지(requirements.txt) 분기하기</h2>\\n<p>개발에서만 사용하는 패키지(크롤링할 때 필요한 패키지 등)와 실 서버에서 사용될 패키지를 분기해줍니다. 서버에 올릴 때에는 후자만 설치해줍니다.</p>\\n<ol>\\n<li>프로젝트 디렉토리가 있는 경로에 <code>requirements</code>디렉토리를 만듭니다.</li>\\n<li>1번 안에 <code>common.txt</code>, <code>dev.txt</code>, <code>prod.txt</code> 로 나눠서 저장합니다.</li>\\n</ol>\\n<hr>\\n<h2>3. 경로 설정하기</h2>\\n<p><code>wsgi.py</code>는 사용자가 서비스(?)로 진입하는 지점입니다. 이 파일에서 아래와 같이 <code>&#x3C;project-name>.settings</code> 부분을 수정해줍니다. 설정 파일을 찾는 경로를 수정해주는 것인데, 원래 있었던 <code>/&#x3C;project-name>/settings.py</code>가 아니라 settings 디렉토리 아래의 prod.py 를 실행하라는 의미입니다.</p>\\n<div class=\\\"gatsby-highlight\\\">\\n      <pre class=\\\"language-python\\\"><code class=\\\"language-python\\\"><span class=\\\"token keyword\\\">from</span> django<span class=\\\"token punctuation\\\">.</span>core<span class=\\\"token punctuation\\\">.</span>wsgi <span class=\\\"token keyword\\\">import</span> get_wsgi_application\\n\\nos<span class=\\\"token punctuation\\\">.</span>environ<span class=\\\"token punctuation\\\">.</span>setdefault<span class=\\\"token punctuation\\\">(</span><span class=\\\"token string\\\">\\\"DJANGO_SETTINGS_MODULE\\\"</span><span class=\\\"token punctuation\\\">,</span> <span class=\\\"token string\\\">\\\"&lt;project-name>.settings.prod\\\"</span><span class=\\\"token punctuation\\\">)</span>\\n</code></pre>\\n      </div>\\n<p>같은 방법으로 <code>manage.py</code> 파일에서 <code>&#x3C;project-name>.settings.dev</code>로 수정해줍니다.</p>\\n<div class=\\\"gatsby-highlight\\\">\\n      <pre class=\\\"language-python\\\"><code class=\\\"language-python\\\"><span class=\\\"token keyword\\\">if</span> __name__ <span class=\\\"token operator\\\">==</span> <span class=\\\"token string\\\">\\\"__main__\\\"</span><span class=\\\"token punctuation\\\">:</span>\\n    os<span class=\\\"token punctuation\\\">.</span>environ<span class=\\\"token punctuation\\\">.</span>setdefault<span class=\\\"token punctuation\\\">(</span><span class=\\\"token string\\\">\\\"DJANGO_SETTINGS_MODULE\\\"</span><span class=\\\"token punctuation\\\">,</span> <span class=\\\"token string\\\">\\\"&lt;project-name>.settings.dev\\\"</span><span class=\\\"token punctuation\\\">)</span>\\n</code></pre>\\n      </div>\\n<p>👉 <a href=\\\"/aws-deploy\\\">AWS로 Django 프로젝트 배포하기(2)</a></p>\\n<p><strong>Let's code like a girl!</strong></p>\",\"frontmatter\":{\"title\":\"AWS로 Django 프로젝트 배포하기(1)\",\"date\":\"2017-02-14\",\"path\":\"/django-aws\",\"tags\":[\"Django\",\"AWS\"],\"excerpt\":\"배포를 위한 Django 파일 분기하기\"}}},\"pathContext\":{}}\n\n/***/ })\n\n});\n\n\n// WEBPACK FOOTER //\n// path---django-aws-a55fb60e2eacdef0c36d.js","module.exports = {\"data\":{\"markdownRemark\":{\"html\":\"<p>참고 : Ask Django</p>\\n<h2>0. 404 페이지 만들기</h2>\\n<p>Page not found 404 에러를 띄워줄 html 페이지를 만듭니다. 잘못된 url로 접근했을 때, 노란색 장고 에러메시지보다는 404 페이지를 띄우는게 좋습니다. 어떤 404 페이지는 간단한 html 게임을 넣기도 합니다.</p>\\n<ol>\\n<li>html 파일이 있는 template 디렉토리에 <code>404.html</code> 파일을 만듭니다.</li>\\n<li>템플릿을 상속받습니다.</li>\\n<li>포스트나 댓글 인스턴스를 불러올 때 <code>django shortcuts</code> 의 <code>get_object_or_404</code>를 이용합니다.</li>\\n</ol>\\n<div class=\\\"gatsby-highlight\\\">\\n      <pre class=\\\"language-python\\\"><code class=\\\"language-python\\\"><span class=\\\"token keyword\\\">from</span> django<span class=\\\"token punctuation\\\">.</span>shortcuts <span class=\\\"token keyword\\\">import</span> redirect<span class=\\\"token punctuation\\\">,</span> render<span class=\\\"token punctuation\\\">,</span> get_object_or_404\\n\\n<span class=\\\"token keyword\\\">def</span> <span class=\\\"token function\\\">post_detail</span><span class=\\\"token punctuation\\\">(</span>request<span class=\\\"token punctuation\\\">,</span> post_pk<span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">:</span>\\n    post <span class=\\\"token operator\\\">=</span> get_object_or_404<span class=\\\"token punctuation\\\">(</span>Post<span class=\\\"token punctuation\\\">,</span> pk<span class=\\\"token operator\\\">=</span>post_pk<span class=\\\"token punctuation\\\">)</span>\\n</code></pre>\\n      </div>\\n<hr>\\n<h2>1. settings.py 분기하기</h2>\\n<p><code>settings.py</code>의 내용을 개발 버전 설정과 배포 버전 설정으로 나눠줍니다.</p>\\n<ol>\\n<li>프로젝트 디렉토리 안에 <code>settings</code> 라는 디렉토리를 만듭니다.</li>\\n<li>1번이 python 모듈이 되도록 <code>__init__.py</code>를 만들어줍니다.</li>\\n<li>2번 디렉토리 안에 <code>common.py</code>와 이를 import 하는 <code>dev.py</code>, <code>prod.py</code> 로 나눠줍니다.</li>\\n<li>\\n<p>원래 있던 <code>settings.py</code>의 내용을 <code>common.py</code>로 복사하고 디렉토리 경로를 한 depth 깊게 설정합니다.</p>\\n<div class=\\\"gatsby-highlight\\\">\\n      <pre class=\\\"language-python\\\"><code class=\\\"language-python\\\">BASE_DIR <span class=\\\"token operator\\\">=</span> dirname<span class=\\\"token punctuation\\\">(</span>dirname<span class=\\\"token punctuation\\\">(</span>dirname<span class=\\\"token punctuation\\\">(</span>os<span class=\\\"token punctuation\\\">.</span>path<span class=\\\"token punctuation\\\">.</span>abspath<span class=\\\"token punctuation\\\">(</span>__file__<span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">)</span>\\n</code></pre>\\n      </div>\\n</li>\\n<li>dev.py는 common.py를 전부 임포트 합니다.</li>\\n<li>prod.py를 아래와 같이 설정합니다.</li>\\n</ol>\\n<div class=\\\"gatsby-highlight\\\">\\n      <pre class=\\\"language-python\\\"><code class=\\\"language-python\\\"><span class=\\\"token keyword\\\">import</span> os\\n<span class=\\\"token keyword\\\">from</span> <span class=\\\"token punctuation\\\">.</span>common <span class=\\\"token keyword\\\">import</span> <span class=\\\"token operator\\\">*</span>\\n\\nDEBUG <span class=\\\"token operator\\\">=</span> <span class=\\\"token boolean\\\">False</span>\\nALLOWED_HOSTS <span class=\\\"token operator\\\">=</span> <span class=\\\"token punctuation\\\">[</span><span class=\\\"token string\\\">'\\\\*'</span><span class=\\\"token punctuation\\\">]</span>\\n\\nSTATIC_ROOT <span class=\\\"token operator\\\">=</span> os<span class=\\\"token punctuation\\\">.</span>path<span class=\\\"token punctuation\\\">.</span>join<span class=\\\"token punctuation\\\">(</span>BASE_DIR<span class=\\\"token punctuation\\\">,</span> <span class=\\\"token string\\\">\\\"..\\\"</span><span class=\\\"token punctuation\\\">,</span> <span class=\\\"token string\\\">\\\"staticfiles\\\"</span><span class=\\\"token punctuation\\\">)</span>\\nMEDIA_ROOT <span class=\\\"token operator\\\">=</span> os<span class=\\\"token punctuation\\\">.</span>path<span class=\\\"token punctuation\\\">.</span>join<span class=\\\"token punctuation\\\">(</span>BASE_DIR<span class=\\\"token punctuation\\\">,</span> <span class=\\\"token string\\\">\\\"..\\\"</span><span class=\\\"token punctuation\\\">,</span> <span class=\\\"token string\\\">\\\"media\\\"</span><span class=\\\"token punctuation\\\">)</span>\\n\\nDATABASES <span class=\\\"token operator\\\">=</span> <span class=\\\"token punctuation\\\">{</span> <span class=\\\"token string\\\">'default'</span><span class=\\\"token punctuation\\\">:</span> <span class=\\\"token punctuation\\\">{</span>\\n  <span class=\\\"token string\\\">'ENGINE'</span><span class=\\\"token punctuation\\\">:</span> <span class=\\\"token string\\\">'django.db.backends.postgresql'</span><span class=\\\"token punctuation\\\">,</span> <span class=\\\"token string\\\">'NAME'</span><span class=\\\"token punctuation\\\">:</span> <span class=\\\"token string\\\">'ubuntu'</span><span class=\\\"token punctuation\\\">,</span>\\n  <span class=\\\"token string\\\">'USER'</span><span class=\\\"token punctuation\\\">:</span> <span class=\\\"token string\\\">'ubuntu'</span><span class=\\\"token punctuation\\\">,</span>\\n  <span class=\\\"token string\\\">'PASSWORD'</span><span class=\\\"token punctuation\\\">:</span> <span class=\\\"token string\\\">'password'</span><span class=\\\"token punctuation\\\">,</span>\\n  <span class=\\\"token string\\\">'HOST'</span><span class=\\\"token punctuation\\\">:</span> <span class=\\\"token string\\\">'127.0.0.1'</span><span class=\\\"token punctuation\\\">,</span> <span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">,</span>\\n<span class=\\\"token punctuation\\\">}</span>\\n</code></pre>\\n      </div>\\n<ol start=\\\"7\\\">\\n<li>각종 계정 정보는 환경변수를 통해 접근하도록 하는 것이 안전합니다.</li>\\n</ol>\\n<hr>\\n<h2>2. 3rd party 패키지(requirements.txt) 분기하기</h2>\\n<p>개발에서만 사용하는 패키지(크롤링할 때 필요한 패키지 등)와 실 서버에서 사용될 패키지를 분기해줍니다. 서버에 올릴 때에는 후자만 설치해줍니다.</p>\\n<ol>\\n<li>프로젝트 디렉토리가 있는 경로에 <code>requirements</code>디렉토리를 만듭니다.</li>\\n<li>1번 안에 <code>common.txt</code>, <code>dev.txt</code>, <code>prod.txt</code> 로 나눠서 저장합니다.</li>\\n</ol>\\n<hr>\\n<h2>3. 경로 설정하기</h2>\\n<p><code>wsgi.py</code>는 사용자가 서비스(?)로 진입하는 지점입니다. 이 파일에서 아래와 같이 <code>&#x3C;project-name>.settings</code> 부분을 수정해줍니다. 설정 파일을 찾는 경로를 수정해주는 것인데, 원래 있었던 <code>/&#x3C;project-name>/settings.py</code>가 아니라 settings 디렉토리 아래의 prod.py 를 실행하라는 의미입니다.</p>\\n<div class=\\\"gatsby-highlight\\\">\\n      <pre class=\\\"language-python\\\"><code class=\\\"language-python\\\"><span class=\\\"token keyword\\\">from</span> django<span class=\\\"token punctuation\\\">.</span>core<span class=\\\"token punctuation\\\">.</span>wsgi <span class=\\\"token keyword\\\">import</span> get_wsgi_application\\n\\nos<span class=\\\"token punctuation\\\">.</span>environ<span class=\\\"token punctuation\\\">.</span>setdefault<span class=\\\"token punctuation\\\">(</span><span class=\\\"token string\\\">\\\"DJANGO_SETTINGS_MODULE\\\"</span><span class=\\\"token punctuation\\\">,</span> <span class=\\\"token string\\\">\\\"&lt;project-name>.settings.prod\\\"</span><span class=\\\"token punctuation\\\">)</span>\\n</code></pre>\\n      </div>\\n<p>같은 방법으로 <code>manage.py</code> 파일에서 <code>&#x3C;project-name>.settings.dev</code>로 수정해줍니다.</p>\\n<div class=\\\"gatsby-highlight\\\">\\n      <pre class=\\\"language-python\\\"><code class=\\\"language-python\\\"><span class=\\\"token keyword\\\">if</span> __name__ <span class=\\\"token operator\\\">==</span> <span class=\\\"token string\\\">\\\"__main__\\\"</span><span class=\\\"token punctuation\\\">:</span>\\n    os<span class=\\\"token punctuation\\\">.</span>environ<span class=\\\"token punctuation\\\">.</span>setdefault<span class=\\\"token punctuation\\\">(</span><span class=\\\"token string\\\">\\\"DJANGO_SETTINGS_MODULE\\\"</span><span class=\\\"token punctuation\\\">,</span> <span class=\\\"token string\\\">\\\"&lt;project-name>.settings.dev\\\"</span><span class=\\\"token punctuation\\\">)</span>\\n</code></pre>\\n      </div>\\n<p>👉 <a href=\\\"/aws-deploy\\\">AWS로 Django 프로젝트 배포하기(2)</a></p>\\n<p><strong>Let's code like a girl!</strong></p>\",\"frontmatter\":{\"title\":\"AWS로 Django 프로젝트 배포하기(1)\",\"date\":\"2017-02-14\",\"path\":\"/django-aws\",\"tags\":[\"Django\",\"AWS\"],\"excerpt\":\"배포를 위한 Django 파일 분기하기\"}}},\"pathContext\":{}}\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/json-loader!./.cache/json/django-aws.json\n// module id = 380\n// module chunks = 204596129026606"],"sourceRoot":""}
webpackJsonp([71194334513297],{383:function(n,a){n.exports={data:{markdownRemark:{html:'<h2>0. HTML input types</h2>\n<p>HTML input 타입은 <code>text</code> 말고도 다양하며, 알맞은 타입을 사용하면 브라우저와 네이티브 디바이스의 다양한 지원을 받을 수 있다.</p>\n<br/>\n<table>\n<thead>\n<tr>\n<th>Type</th>\n<th>Description</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td><code>type="button"</code></td>\n<td>기본 동작이 없는 버튼</td>\n</tr>\n<tr>\n<td><code>type="checkbox"</code></td>\n<td>단일 값을 선택/해제하는 체크박스</td>\n</tr>\n<tr>\n<td><code>type="radio"</code></td>\n<td>multiple choices 에서 한가지만 선택할 수 있다.</td>\n</tr>\n<tr>\n<td><code>type="email"</code></td>\n<td>모바일로 접근할 경우, 이메일에 적합한 키패드가 표시된다.</td>\n</tr>\n<tr>\n<td><code>type="number"</code></td>\n<td>모바일로 접근할 경우, 숫자 키패드가 표시된다.</td>\n</tr>\n<tr>\n<td><code>type="tel"</code></td>\n<td>모바일에서는 번호 키패드가 표시되며 \n<code>number</code>\n와 달리 0 으로 시작할 수 있다.</td>\n</tr>\n<tr>\n<td><code>type="range"</code></td>\n<td>역시 숫자 input 이지만, 정확한 값이 아니라 범위를 지정할 수 있다.</td>\n</tr>\n<tr>\n<td><code>type="password"</code></td>\n<td>maxlength 와 minlength 속성을 사용할 수 있다.</td>\n</tr>\n</tbody>\n</table>\n<br/>\n<p>이외에도 <code>color</code>, <code>date</code>, <code>datetime-local</code>, <code>file</code>, <code>hidden</code>, <code>image</code>, <code>month</code>, <code>Note</code>, <code>reset</code>, <code>search</code>, <code>submit</code>, <code>time</code>, <code>url</code>, <code>week</code> 등 type 이 있다.</p>\n<br/>\n<ul>\n<li>출처: <a href="https://developer.mozilla.org/en-US/docs/Web/HTML/Element/input">https://developer.mozilla.org/en-US/docs/Web/HTML/Element/input</a></li>\n</ul>\n<hr>\n<h2>1. <code>datalist</code> tag</h2>\n<ul>\n<li>option 값들이 autocomplete dropdown 으로 제공된다.</li>\n<li>list 의 이름과 datalist 의 id 가 일치해야 한다.</li>\n</ul>\n<p><b>Example:</b></p>\n<form>\n  <label>\n    <span>👉 Select formula:</span>\n    <input name="formula" type="text" list="formula">\n  </label>\n  <!-- datalist -->\n  <datalist id="formula">\n    <option value="sin">\n    <option value="cos">\n    <option value="tan">\n    <option value="cot">\n  </datalist>\n</form>\n<div class="gatsby-highlight">\n      <pre class="language-html"><code class="language-html"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>input</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>formula<span class="token punctuation">"</span></span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>text<span class="token punctuation">"</span></span> <span class="token attr-name">list</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>formula<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>\n<span class="token comment">&lt;!-- datalist --></span>\n<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>datalist</span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>formula<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>\n  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>option</span> <span class="token attr-name">value</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>sin<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>\n  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>option</span> <span class="token attr-name">value</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>cos<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>\n  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>option</span> <span class="token attr-name">value</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>tan<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>\n  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>option</span> <span class="token attr-name">value</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>cot<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>\n<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>datalist</span><span class="token punctuation">></span></span>\n</code></pre>\n      </div>\n<hr>\n<h2>2. <code>min</code>, <code>max</code>, <code>step</code> attributes of <code>number</code> type</h2>\n<ul>\n<li>value 로 default 값을 지정할 수 있다.</li>\n<li>min, max 와 step 을 지정할 수 있다.</li>\n</ul>\n<p><b>Example:</b></p>\n<form>\n  <label>\n    <span>👉 Select number: </span>\n    <input name="precision" type="number" min="0" max="50" step="5" value="50">\n  <label>\n</form>\n<div class="gatsby-highlight">\n      <pre class="language-html"><code class="language-html"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>input</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>precision<span class="token punctuation">"</span></span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>number<span class="token punctuation">"</span></span> <span class="token attr-name">value</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>50<span class="token punctuation">"</span></span> <span class="token attr-name">min</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>0<span class="token punctuation">"</span></span> <span class="token attr-name">max</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>50<span class="token punctuation">"</span></span> <span class="token attr-name">step</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>5<span class="token punctuation">"</span></span> <span class="token punctuation">></span></span>\n</code></pre>\n      </div>\n<ul>\n<li>출처: <a href="https://developer.mozilla.org/en-US/docs/Web/HTML/Element/input/number">https://developer.mozilla.org/en-US/docs/Web/HTML/Element/input/number</a></li>\n</ul>\n<hr>\n<h2>3. <code>range</code> type</h2>\n<p><b>Example:</b></p>\n<form>\n  <label>\n    <span>👉 Select range (1 to 10): </span>\n    <input name="iterations" type="range" min="1" max="10">\n  </label>\n</form>\n<div class="gatsby-highlight">\n      <pre class="language-html"><code class="language-html"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>input</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>iterations<span class="token punctuation">"</span></span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>range<span class="token punctuation">"</span></span> <span class="token attr-name">min</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>1<span class="token punctuation">"</span></span> <span class="token attr-name">max</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>10<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>\n</code></pre>\n      </div>\n<hr>\n<h2>4. Displaying validity only with css!</h2>\n<p>css 에서 <code>:invalid</code>, <code>:valid</code> property 로 input 값의 유효성을 간단하게 표시할 수 있다.</p>\n<br/>\n<p><b>Example:</b></p>\n<iframe src="https://codesandbox.io/embed/34z0v2ryrq?autoresize=1&fontsize=14&hidenavigation=1&view=preview" style="width:100%; height:500px; border:0; border-radius: 4px; overflow:hidden;" sandbox="allow-modals allow-forms allow-popups allow-scripts allow-same-origin"></iframe>\n<br/>\n<div class="gatsby-highlight">\n      <pre class="language-css"><code class="language-css"><span class="token selector">input:invalid + span:after</span> <span class="token punctuation">{</span>\n  <span class="token property">content</span><span class="token punctuation">:</span> <span class="token string">"✖"</span><span class="token punctuation">;</span>\n  <span class="token property">padding-left</span><span class="token punctuation">:</span> 5px<span class="token punctuation">;</span>\n<span class="token punctuation">}</span>\n\n<span class="token selector">input:valid + span:after</span> <span class="token punctuation">{</span>\n  <span class="token property">content</span><span class="token punctuation">:</span> <span class="token string">"✓"</span><span class="token punctuation">;</span>\n  <span class="token property">padding-left</span><span class="token punctuation">:</span> 5px<span class="token punctuation">;</span>\n<span class="token punctuation">}</span>\n</code></pre>\n      </div>\n<hr>\n<h2>5. Using proper types in React/TypeScript</h2>\n<p>리액트와 타입스크립트를 사용한다면 아래처럼 미리 리액트 라이브러리에서 정의된 타입을 사용하여 컴포넌트를 만들 수 있다.</p>\n<div class="gatsby-highlight">\n      <pre class="language-javascript"><code class="language-javascript"><span class="token keyword">interface</span> <span class="token class-name">Props</span> <span class="token keyword">extends</span> <span class="token class-name">React<span class="token punctuation">.</span>InputHTMLAttributes</span><span class="token operator">&lt;</span>HTMLInputElement<span class="token operator">></span> <span class="token punctuation">{</span>\n  <span class="token comment">// additional props</span>\n<span class="token punctuation">}</span>\n\n<span class="token keyword">export</span> <span class="token keyword">const</span> Input<span class="token punctuation">:</span> React<span class="token punctuation">.</span>SFC<span class="token operator">&lt;</span>Props<span class="token operator">></span> <span class="token operator">=</span> props <span class="token operator">=></span> <span class="token punctuation">(</span>\n  <span class="token operator">&lt;</span>input value<span class="token operator">=</span><span class="token punctuation">{</span>value<span class="token punctuation">}</span> <span class="token punctuation">{</span><span class="token operator">...</span>props<span class="token punctuation">}</span> <span class="token operator">/</span><span class="token operator">></span>\n<span class="token punctuation">)</span><span class="token punctuation">;</span>\n</code></pre>\n      </div>',frontmatter:{title:"Let's use input to the fullest",date:"2019-03-10",path:"/html5-input",tags:["html5","datalist"],excerpt:"Using proper input type in HTML5"}}},pathContext:{}}}});
//# sourceMappingURL=path---html-5-input-c66835122b6e326c30c5.js.map
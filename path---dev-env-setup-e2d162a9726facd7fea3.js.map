{"version":3,"sources":["webpack:///path---dev-env-setup-e2d162a9726facd7fea3.js","webpack:///./.cache/json/dev-env-setup.json"],"names":["webpackJsonp","372","module","exports","data","markdownRemark","html","frontmatter","title","date","path","tags","excerpt","pathContext"],"mappings":"AAAAA,cAAc,iBAERC,IACA,SAAUC,EAAQC,GCHxBD,EAAAC,SAAkBC,MAAQC,gBAAkBC,KAAA,q7GAAg3FC,aAAutBC,MAAA,YAAAC,KAAA,aAAAC,KAAA,iBAAAC,MAAA,oEAAAC,QAAA,MAA2JC","file":"path---dev-env-setup-e2d162a9726facd7fea3.js","sourcesContent":["webpackJsonp([138992667808482],{\n\n/***/ 372:\n/***/ (function(module, exports) {\n\n\tmodule.exports = {\"data\":{\"markdownRemark\":{\"html\":\"<blockquote>\\n<p>개발환경 세팅은 자주 있는 일이 아니기 때문에 기억하기 쉽지 않다. 빠르게 셋업하고 개발에 집중하기 위해 정리!</p>\\n</blockquote>\\n<h2>1. Setup script</h2>\\n<div class=\\\"gatsby-highlight\\\">\\n      <pre class=\\\"language-bash\\\"><code class=\\\"language-bash\\\"><span class=\\\"token comment\\\"># Homebrew</span>\\n/usr/bin/ruby -e <span class=\\\"token string\\\">\\\"<span class=\\\"token variable\\\"><span class=\\\"token variable\\\">$(</span>curl -fsSL https://raw.githubusercontent.com/Homebrew/install/master/install<span class=\\\"token variable\\\">)</span></span>\\\"</span>\\n\\n<span class=\\\"token comment\\\"># zsh</span>\\nbrew <span class=\\\"token function\\\">install</span> zsh\\n\\n<span class=\\\"token comment\\\"># oh-my-zsh</span>\\nsh -c <span class=\\\"token string\\\">\\\"<span class=\\\"token variable\\\"><span class=\\\"token variable\\\">$(</span>curl -fsSL https://raw.github.com/robbyrussell/oh-my-zsh/master/tools/install.sh<span class=\\\"token variable\\\">)</span></span>\\\"</span>\\n\\n<span class=\\\"token comment\\\"># nvm</span>\\ncurl -o- https://raw.githubusercontent.com/creationix/nvm/v0.33.8/install.sh <span class=\\\"token operator\\\">|</span> <span class=\\\"token function\\\">bash</span>\\n<span class=\\\"token function\\\">source</span> ~/.nvm/nvm.sh\\n\\n<span class=\\\"token comment\\\"># Yarn</span>\\nbrew <span class=\\\"token function\\\">install</span> yarn\\n\\n<span class=\\\"token comment\\\"># pure-prompt</span>\\n<span class=\\\"token function\\\">npm</span> <span class=\\\"token function\\\">install</span> --global pure-prompt\\n\\n<span class=\\\"token comment\\\"># pyenv</span>\\nbrew <span class=\\\"token function\\\">install</span> pyenv\\n\\n<span class=\\\"token comment\\\"># pyenv-virtualenv</span>\\nbrew <span class=\\\"token function\\\">install</span> pyenv-virtualenv\\n\\n<span class=\\\"token comment\\\"># autoenv</span>\\nbrew <span class=\\\"token function\\\">install</span> autoenv\\n\\n<span class=\\\"token comment\\\"># Start</span>\\n<span class=\\\"token function\\\">source</span> ~/.zshrc\\n</code></pre>\\n      </div>\\n<hr>\\n<h2>2. <code>.zshrc</code>에 설정 추가하기</h2>\\n<div class=\\\"gatsby-highlight\\\">\\n      <pre class=\\\"language-bash\\\"><code class=\\\"language-bash\\\"><span class=\\\"token comment\\\"># ~/.zshrc</span>\\n\\n<span class=\\\"token comment\\\"># pyenv</span>\\n<span class=\\\"token function\\\">eval</span> <span class=\\\"token string\\\">\\\"<span class=\\\"token variable\\\"><span class=\\\"token variable\\\">$(</span>pyenv init -<span class=\\\"token variable\\\">)</span></span>\\\"</span>\\n\\n<span class=\\\"token comment\\\"># pyenv-virtualenv</span>\\n<span class=\\\"token function\\\">eval</span> <span class=\\\"token string\\\">\\\"<span class=\\\"token variable\\\"><span class=\\\"token variable\\\">$(</span>pyenv virtualenv-init -<span class=\\\"token variable\\\">)</span></span>\\\"</span>\\n\\n<span class=\\\"token comment\\\"># autoenv</span>\\n<span class=\\\"token function\\\">source</span> /usr/local/opt/autoenv/activate.sh\\n\\n<span class=\\\"token comment\\\"># pure-prompt</span>\\nautoload -U promptinit<span class=\\\"token punctuation\\\">;</span> promptinit\\nprompt pure\\n</code></pre>\\n      </div>\\n<hr>\\n<h2>3. <code>.gitconfig</code> 설정하기</h2>\\n<div class=\\\"gatsby-highlight\\\">\\n      <pre class=\\\"language-none\\\"><code class=\\\"language-none\\\">[user]\\n\\tname = username\\n\\temail = user@gmail.com\\n[alias]\\n\\tco = checkout\\n\\ts = status --short --branch\\n\\td = diff\\n\\tds = diff --staged\\n\\tcommend = commit --amend --no-edit</code></pre>\\n      </div>\\n<hr>\\n<h2>4. <code>.env</code> 추가하기</h2>\\n<ul>\\n<li>python 프로젝트를 시작한다면, 프로젝트의 루트 디렉토리에 <code>.env</code> 파일을 만들고 아래 코드를 추가한다.</li>\\n</ul>\\n<div class=\\\"gatsby-highlight\\\">\\n      <pre class=\\\"language-none\\\"><code class=\\\"language-none\\\">pyenv activate project-name</code></pre>\\n      </div>\",\"frontmatter\":{\"title\":\"개발환경 세팅하기\",\"date\":\"2018-04-14\",\"path\":\"/dev-env-setup\",\"tags\":[\"zsh\",\"ohmyzsh\",\"pyenv\",\"pyenv-virtualenv\",\"autoenv\",\"pure-prompt\"],\"excerpt\":\"\"}}},\"pathContext\":{}}\n\n/***/ })\n\n});\n\n\n// WEBPACK FOOTER //\n// path---dev-env-setup-e2d162a9726facd7fea3.js","module.exports = {\"data\":{\"markdownRemark\":{\"html\":\"<blockquote>\\n<p>개발환경 세팅은 자주 있는 일이 아니기 때문에 기억하기 쉽지 않다. 빠르게 셋업하고 개발에 집중하기 위해 정리!</p>\\n</blockquote>\\n<h2>1. Setup script</h2>\\n<div class=\\\"gatsby-highlight\\\">\\n      <pre class=\\\"language-bash\\\"><code class=\\\"language-bash\\\"><span class=\\\"token comment\\\"># Homebrew</span>\\n/usr/bin/ruby -e <span class=\\\"token string\\\">\\\"<span class=\\\"token variable\\\"><span class=\\\"token variable\\\">$(</span>curl -fsSL https://raw.githubusercontent.com/Homebrew/install/master/install<span class=\\\"token variable\\\">)</span></span>\\\"</span>\\n\\n<span class=\\\"token comment\\\"># zsh</span>\\nbrew <span class=\\\"token function\\\">install</span> zsh\\n\\n<span class=\\\"token comment\\\"># oh-my-zsh</span>\\nsh -c <span class=\\\"token string\\\">\\\"<span class=\\\"token variable\\\"><span class=\\\"token variable\\\">$(</span>curl -fsSL https://raw.github.com/robbyrussell/oh-my-zsh/master/tools/install.sh<span class=\\\"token variable\\\">)</span></span>\\\"</span>\\n\\n<span class=\\\"token comment\\\"># nvm</span>\\ncurl -o- https://raw.githubusercontent.com/creationix/nvm/v0.33.8/install.sh <span class=\\\"token operator\\\">|</span> <span class=\\\"token function\\\">bash</span>\\n<span class=\\\"token function\\\">source</span> ~/.nvm/nvm.sh\\n\\n<span class=\\\"token comment\\\"># Yarn</span>\\nbrew <span class=\\\"token function\\\">install</span> yarn\\n\\n<span class=\\\"token comment\\\"># pure-prompt</span>\\n<span class=\\\"token function\\\">npm</span> <span class=\\\"token function\\\">install</span> --global pure-prompt\\n\\n<span class=\\\"token comment\\\"># pyenv</span>\\nbrew <span class=\\\"token function\\\">install</span> pyenv\\n\\n<span class=\\\"token comment\\\"># pyenv-virtualenv</span>\\nbrew <span class=\\\"token function\\\">install</span> pyenv-virtualenv\\n\\n<span class=\\\"token comment\\\"># autoenv</span>\\nbrew <span class=\\\"token function\\\">install</span> autoenv\\n\\n<span class=\\\"token comment\\\"># Start</span>\\n<span class=\\\"token function\\\">source</span> ~/.zshrc\\n</code></pre>\\n      </div>\\n<hr>\\n<h2>2. <code>.zshrc</code>에 설정 추가하기</h2>\\n<div class=\\\"gatsby-highlight\\\">\\n      <pre class=\\\"language-bash\\\"><code class=\\\"language-bash\\\"><span class=\\\"token comment\\\"># ~/.zshrc</span>\\n\\n<span class=\\\"token comment\\\"># pyenv</span>\\n<span class=\\\"token function\\\">eval</span> <span class=\\\"token string\\\">\\\"<span class=\\\"token variable\\\"><span class=\\\"token variable\\\">$(</span>pyenv init -<span class=\\\"token variable\\\">)</span></span>\\\"</span>\\n\\n<span class=\\\"token comment\\\"># pyenv-virtualenv</span>\\n<span class=\\\"token function\\\">eval</span> <span class=\\\"token string\\\">\\\"<span class=\\\"token variable\\\"><span class=\\\"token variable\\\">$(</span>pyenv virtualenv-init -<span class=\\\"token variable\\\">)</span></span>\\\"</span>\\n\\n<span class=\\\"token comment\\\"># autoenv</span>\\n<span class=\\\"token function\\\">source</span> /usr/local/opt/autoenv/activate.sh\\n\\n<span class=\\\"token comment\\\"># pure-prompt</span>\\nautoload -U promptinit<span class=\\\"token punctuation\\\">;</span> promptinit\\nprompt pure\\n</code></pre>\\n      </div>\\n<hr>\\n<h2>3. <code>.gitconfig</code> 설정하기</h2>\\n<div class=\\\"gatsby-highlight\\\">\\n      <pre class=\\\"language-none\\\"><code class=\\\"language-none\\\">[user]\\n\\tname = username\\n\\temail = user@gmail.com\\n[alias]\\n\\tco = checkout\\n\\ts = status --short --branch\\n\\td = diff\\n\\tds = diff --staged\\n\\tcommend = commit --amend --no-edit</code></pre>\\n      </div>\\n<hr>\\n<h2>4. <code>.env</code> 추가하기</h2>\\n<ul>\\n<li>python 프로젝트를 시작한다면, 프로젝트의 루트 디렉토리에 <code>.env</code> 파일을 만들고 아래 코드를 추가한다.</li>\\n</ul>\\n<div class=\\\"gatsby-highlight\\\">\\n      <pre class=\\\"language-none\\\"><code class=\\\"language-none\\\">pyenv activate project-name</code></pre>\\n      </div>\",\"frontmatter\":{\"title\":\"개발환경 세팅하기\",\"date\":\"2018-04-14\",\"path\":\"/dev-env-setup\",\"tags\":[\"zsh\",\"ohmyzsh\",\"pyenv\",\"pyenv-virtualenv\",\"autoenv\",\"pure-prompt\"],\"excerpt\":\"\"}}},\"pathContext\":{}}\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/json-loader!./.cache/json/dev-env-setup.json\n// module id = 372\n// module chunks = 138992667808482"],"sourceRoot":""}
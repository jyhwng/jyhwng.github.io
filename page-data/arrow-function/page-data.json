{"componentChunkName":"component---src-templates-blog-post-js","path":"/arrow-function","webpackCompilationHash":"782c953bea47e1bfe9a1","result":{"data":{"markdownRemark":{"html":"<blockquote>\n<p>개인적인 공부 노트로, 오류가 있을 수 있습니다.</p>\n</blockquote>\n<h2>1. Syntax</h2>\n<p>es6에서 소개된 arrow function를 사용하면 아래와 같이 간결하게 함수를 정의할 수 있다.</p>\n<div class=\"gatsby-highlight\">\n      <pre class=\"language-javascript\"><code class=\"language-javascript\"><span class=\"token comment\">/* using function keyword */</span>\n<span class=\"token keyword\">function</span> <span class=\"token function\">method</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token comment\">// do something...</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token comment\">/* ES6 arrow function */</span>\n<span class=\"token keyword\">const</span> <span class=\"token function-variable function\">method</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n  <span class=\"token comment\">// do something...</span>\n<span class=\"token punctuation\">}</span></code></pre>\n      </div>\n<p>인자가 하나라면 <code class=\"language-text\">()</code>없이 아래처럼 써도 된다.</p>\n<div class=\"gatsby-highlight\">\n      <pre class=\"language-javascript\"><code class=\"language-javascript\"><span class=\"token function-variable function\">handleClick</span> <span class=\"token operator\">=</span> <span class=\"token parameter\">e</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span> \n  e<span class=\"token punctuation\">.</span><span class=\"token function\">preventDefault</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> \n<span class=\"token punctuation\">}</span></code></pre>\n      </div>\n<hr>\n<h2>2. <code class=\"language-text\">this</code></h2>\n<ul>\n<li>일반적으로 this는 caller에 따라 정해진다. 즉, this는 실행 시의 컨텍스트에 따라 바인딩된다.</li>\n<li>그러나 arrow function에서는 <strong><code class=\"language-text\">this</code>가 caller에 bound되지 않는다.</strong> 👉 대신 그 function을 감싸는 lexical context의 this를 가리킨다.(<a href=\"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Operators/this\">출처</a>)</li>\n</ul>\n<p>이벤트 리스너 안에서 arrow function을 쓰면 this가 가리키는 것이 그 바깥 스코프가 된다.</p>\n<ul>\n<li>\n<p>arrow function 안에서 this를 사용했을 때: this는 arrow function이 아니라 enclosing lexical context인 <code class=\"language-text\">window</code>를 가리킨다.</p>\n<div class=\"gatsby-highlight\">\n      <pre class=\"language-javascript\"><code class=\"language-javascript\"><span class=\"token comment\">/* arrow function */</span>\n<span class=\"token keyword\">const</span> button <span class=\"token operator\">=</span> document<span class=\"token punctuation\">.</span><span class=\"token function\">querySelector</span><span class=\"token punctuation\">(</span><span class=\"token string\">'button'</span><span class=\"token punctuation\">)</span>\nbutton<span class=\"token punctuation\">.</span><span class=\"token function\">addEventListener</span><span class=\"token punctuation\">(</span><span class=\"token string\">'click'</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\nconsole<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">)</span> <span class=\"token comment\">// window</span>\n<span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>classList<span class=\"token punctuation\">.</span><span class=\"token function\">toggle</span><span class=\"token punctuation\">(</span><span class=\"token string\">'on'</span><span class=\"token punctuation\">)</span> <span class=\"token comment\">// 여기서 this는 window 객체를 가리키게 되고, button은 원하는 대로 작동하지 않는다.</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span></code></pre>\n      </div>\n</li>\n<li>\n<p>function 키워드를 쓰면 원하는 button에 this 바인딩이 된다.</p>\n<div class=\"gatsby-highlight\">\n      <pre class=\"language-javascript\"><code class=\"language-javascript\"><span class=\"token comment\">/* refactor with function keyword */</span>\n<span class=\"token keyword\">const</span> button <span class=\"token operator\">=</span> document<span class=\"token punctuation\">.</span><span class=\"token function\">querySelector</span><span class=\"token punctuation\">(</span><span class=\"token string\">'button'</span><span class=\"token punctuation\">)</span>\nbutton<span class=\"token punctuation\">.</span><span class=\"token function\">addEventListener</span><span class=\"token punctuation\">(</span><span class=\"token string\">'click'</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n<span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>classList<span class=\"token punctuation\">.</span><span class=\"token function\">toggle</span><span class=\"token punctuation\">(</span><span class=\"token string\">'on'</span><span class=\"token punctuation\">)</span> <span class=\"token comment\">// 여기서 this는 button을 가리킨다.</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span></code></pre>\n      </div>\n<p>출처 - <a href=\"https://wesbos.com/arrow-function-no-no/\">https://wesbos.com/arrow-function-no-no/</a></p>\n</li>\n</ul>\n<hr>\n<h2>3. <code class=\"language-text\">.bind(this)</code> in React</h2>\n<ul>\n<li>element 이벤트의 콜백으로 메소드를 실행하면, 실행 시의 context에 따라 this 는 클래스가 아닌 <code class=\"language-text\">window</code>를 가리키게 된다.</li>\n</ul>\n<div class=\"gatsby-highlight\">\n      <pre class=\"language-javascript\"><code class=\"language-javascript\"><span class=\"token keyword\">class</span> <span class=\"token class-name\">MyComponent</span> <span class=\"token keyword\">extends</span> <span class=\"token class-name\">React<span class=\"token punctuation\">.</span>Component</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token function\">handleClick</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">)</span> <span class=\"token comment\">// window</span>\n    <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span><span class=\"token function\">setState</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span> open<span class=\"token punctuation\">:</span> <span class=\"token boolean\">false</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>  <span class=\"token comment\">// 제대로 실행되지 않는다. </span>\n  <span class=\"token punctuation\">}</span>\n  <span class=\"token function\">render</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">return</span> <span class=\"token punctuation\">(</span>\n      <span class=\"token operator\">&lt;</span>button onClick<span class=\"token operator\">=</span><span class=\"token punctuation\">{</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>handleClick<span class=\"token punctuation\">}</span><span class=\"token operator\">/</span><span class=\"token operator\">></span>  <span class=\"token comment\">// handleClick()은 MyComponent의 메소드이지만, this는 MyComponent가 아니라 undefined가 된다.</span>\n    <span class=\"token punctuation\">)</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span></code></pre>\n      </div>\n<div class=\"gatsby-highlight\">\n      <pre class=\"language-javascript\"><code class=\"language-javascript\"><span class=\"token keyword\">class</span> <span class=\"token class-name\">MyComponent</span> <span class=\"token keyword\">extends</span> <span class=\"token class-name\">React<span class=\"token punctuation\">.</span>Component</span> <span class=\"token punctuation\">{</span>\n  state <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span> open<span class=\"token punctuation\">:</span> <span class=\"token boolean\">false</span> <span class=\"token punctuation\">}</span>\n  <span class=\"token function-variable function\">handleClick</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span> <span class=\"token comment\">// arrow function에서는 this의 맥락이 이를 감싸는 컨텍스트이다.</span>\n    console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">)</span> <span class=\"token comment\">// MyComponent</span>\n    <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span><span class=\"token function\">setState</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span> open<span class=\"token punctuation\">:</span> <span class=\"token boolean\">false</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n  <span class=\"token punctuation\">}</span>\n  <span class=\"token function\">render</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">return</span> <span class=\"token punctuation\">(</span>\n      <span class=\"token operator\">&lt;</span>button onClick<span class=\"token operator\">=</span><span class=\"token punctuation\">{</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>handleClick<span class=\"token punctuation\">}</span><span class=\"token operator\">/</span><span class=\"token operator\">></span>  <span class=\"token comment\">// 여기서 handleClick 실행될 땐, handleClick을 감싸고 있는 MyComponent가 this가 된다. 따라서 메소드가 제대로 실행이 된다.</span>\n    <span class=\"token punctuation\">)</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span></code></pre>\n      </div>","frontmatter":{"title":"Arrow function","date":"2018-04-25","path":"/arrow-function","tags":["javascript","es6"],"excerpt":"What is arrow function and why you should use it"}}},"pageContext":{"isCreatedByStatefulCreatePages":false}}}